On host:
# pacman -S debootstrap ubuntu-keyring xorg-xhost
$ pacaur -S gnupg1
# cd /var/lib/machines
The name (here kamaro) cannot contain dashes!
/*if on btrfs do:
# sudo btrfs subvolume create kamaro
*/
# debootstrap xenial kamaro http://de.archive.ubuntu.com/ubuntu/
Set root password:
# systemd-nspawn -M kamaro
  | # passwd
  \ # logout

Start container:
# systemd-nspawn -bM kamaro
  | *Login as root*
  | We want to use resolv from host, so disable it here:
  | # systemctl disable resolvconf.service
  |
  | Create user:
  | # groupadd admin
  | Username should be the same as your username on host, makes bindings easier
  | # useradd -m -G admin -s /bin/bash <username>
  | # passwd <username>
  |
  | Enable autologin:
  | # systemctl edit container-getty@.service
[Service]
ExecStart=
ExecStart=-/sbin/agetty --noclear --autologin <username> --keep-baud pts/%I 115200,38400,9600 $TERM
  \ # poweroff

On host:
# vim /etc/systemd/nspawn/kamaro.nspawn
[Files]
Bind=<your workspace here>
BindReadOnly=/tmp/.X11-unix/X0
BindReadOnly=/etc/resolv.conf

Start container again:
# systemd-nspawn -bM kamaro
  | *Login as root or with user*
  | populate /etc/apt/sources.list with the following:
deb http://de.archive.ubuntu.com/ubuntu xenial-updates main restricted universe multiverse

deb http://de.archive.ubuntu.com/ubuntu xenial main restricted universe multiverse

deb http://de.archive.ubuntu.com/ubuntu xenial-security main restricted universe multiverse

deb http://de.archive.ubuntu.com/ubuntu xenial-backports main restricted universe multiverse
  |
  | markdev throws some errors when in container:
  | # apt-mark hold makedev
  | # apt update
  | # apt upgrade
  | # apt install dbus
  |
  \ # poweroff

On host:
# systemctl edit systemd-nspawn@.service
[Service]
ExecStart=
ExecStart=/usr/bin/systemd-nspawn --quiet --keep-unit --boot --link-journal=try-guest --machine=%I

To allow windows from X11 to show on host$:
xhost +local:
(You can also add it to your .xinitrc)

You can now start the container with machinectl:
# machinectl start kamaro
And login:
# machinectl login kamaro
  | *You should be automatically logged in*
  |
  | $ echo "export DISPLAY=:0" >> ~/.bashrc
  | $ export DISPLAY=:0
  | You might want to change the prompt as well to avoid confusion
  |
  | Install ROS Kinetic: http://wiki.ros.org/kinetic/Installation/Ubuntu

Some tips:

- To get out of container press ^]^]^] (thats Strg+AltGr+9 on a german layout)


- /var/lib/machines is root only:
  # setfacl -m "user:<username>:rx" /var/lib/machines/
  This will be lost on reboot though, so creating a script might be useful.


- To use cameras or other usb devices, you need to allow the container to use
  the device, and then bind the appropriate device node in:
  To allow it, you need to add a line to your nspawn service file:
  # systemctl edit systemd-nspawn@.service
  [Service]
  ExecStart=
  ExecStart=/usr/bin/systemd-nspawn --quiet --keep-unit --boot --link-journal=try-guest --machine=%I
  DeviceAllow=char-<devicetype> rwm  # <--new line

  <devicetype> is the char device name you want to use, you can get it from /proc/devices.
  For example, to use a camera, that line should be:
  DeviceAllow=char-video4linux rwm

  Then bind the device node(s) (e.g. /dev/video0) into your container. You can
  do this while the container is already running:
  # machinectl bind --mkdir kamaro <device-node>
